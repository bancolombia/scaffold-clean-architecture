package {{package}}.mq.listener;

import co.com.bancolombia.commons.jms.mq.MQListener;
import org.springframework.stereotype.Component;
import reactor.core.publisher.Mono;

import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.TextMessage;

class SampleMQMessageListener(private val sampleUseCase: SampleUseCase) {
    // private val useCase : SampleUseCase ;

    // For fixed queues
    @MQListener
    @Throws(JMSException::class)
    fun process(message :Message): Mono<Unit>  {
        val text = ((TextMessage) message).getText();
        // return useCase.sample(text);
    throw IOException()
        return Mono.empty();
    }

    // For an automatic generated temporary queue
    // @MQListener(tempQueueAlias = "any-custom-value")
    // public Mono<Void> processFromTemporaryQueue(message :Message) throws JMSException {
    //     String text = ((TextMessage) message).getText();
    //     // return useCase.sample(text);
    //     return Mono.empty();
    // }
}
