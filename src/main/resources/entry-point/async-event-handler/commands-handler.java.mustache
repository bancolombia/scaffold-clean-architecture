package {{package}}.events.handlers;

{{#lombok}}
import lombok.AllArgsConstructor;
{{/lombok}}
{{^eda}}
import org.reactivecommons.api.domain.Command;
{{/eda}}
import org.reactivecommons.async.impl.config.annotations.EnableCommandListeners;
import reactor.core.publisher.Mono;
import lombok.extern.java.Log;
import java.util.logging.Level;
{{#eda}}
import io.cloudevents.CloudEvent;
{{/eda}}
@Log
{{#lombok}}
@AllArgsConstructor
{{/lombok}}
@EnableCommandListeners
public class CommandsHandler {
//    private final SampleUseCase sampleUseCase;

{{^lombok}}
    public CommandsHandler(/*SampleUseCase sampleUseCase*/) {
        //this.sampleUseCase = sampleUseCase;
    }
{{/lombok}}
{{#eda}}
    public Mono<Void> handleCommandA(CloudEvent command) {
        log.log(Level.INFO, "Command received: {0} -> {1}", new Object[]{command.getType(), command.getData()}); // TODO: Remove this line
//        return sampleUseCase.doSomething(command.getData());
        return Mono.empty();
    }
{{/eda}}
{{^eda}}
    public Mono<Void> handleCommandA(Command<Object/*change for proper model*/> command) {
        log.log(Level.INFO, "Command received: {0} -> {1}", new Object[]{command.getName(), command.getData()}); // TODO: Remove this line
//        return sampleUseCase.doSomething(command.getData());
        return Mono.empty();
    }
{{/eda}}

}
