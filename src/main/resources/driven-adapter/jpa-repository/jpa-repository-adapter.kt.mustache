package {{package}}.jpa

import {{package}}.jpa.helper.AdapterOperations
import org.reactivecommons.utils.ObjectMapper
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.stereotype.Repository

@Repository
class JPARepositoryAdapter :AdapterOperations<Any/* change for domain model */, Any/* change for adapter model */, String, JPARepository>
// implements ModelRepository from domain
{

    fun JPARepositoryAdapter(repository :JPARepository, mapper :ObjectMapper) {
        /**
         *  Could be use mapper.mapBuilder if your domain model implement builder pattern
         *  super(repository, mapper, d -> mapper.mapBuilder(d,ObjectModel.ObjectModelBuilder.class).build())
         *  Or using mapper.map with the class of the object model
         */
        super(repository, mapper, d -> mapper.map(d, Object.class/* change for domain model */))
    }
}
