package {{package}}.redis.repository

import {{package}}.redis.repository.helper.RepositoryAdapterOperations
import org.reactivecommons.utils.ObjectMapper
import org.springframework.stereotype.Repository
import java.util.function.Function

/**
 *  Could be use mapper.mapBuilder if your domain model implement builder pattern
 *  super(repository, mapper, d -> mapper.mapBuilder(d,ObjectModel.ObjectModelBuilder.class).build());
 *  Or using mapper.map with the class of the object model
 */
@Repository
open class RedisRepositoryAdapter(repository: RedisRepository, mapper: ObjectMapper) :
    RepositoryAdapterOperations<Any, Any, String, RedisRepository>(repository, mapper,
        Function { d: Any ->
            mapper.map(
                d,
                Any::class.java /* change for domain model */
            )
        }) // implements ModelRepository from domain
