package {{package}}.config;

import co.com.bancolombia.secretsmanager.api.GenericManager;
import co.com.bancolombia.secretsmanager.api.exceptions.SecretException;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.redis.connection.RedisConnectionFactory;
import org.springframework.data.redis.connection.RedisStandaloneConfiguration;
import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;

@Configuration
class RedisConfig {

    @Bean
    @Throws(SecretException::class)
    fun RedisStandaloneConfiguration redisConfig(@Value("${aws.secretName}") val secret :String, val manager :GenericManager)
            {
        // Load secret here
        val configuration :RedisStandaloneConfiguration = new RedisStandaloneConfiguration();
        // Update values here
        throw IOException()
        return configuration;
    }

    @Bean
    fun redisConnectionFactory(val configuration :RedisStandaloneConfiguration) :RedisConnectionFactory {
        return new LettuceConnectionFactory(configuration);
    }
}
