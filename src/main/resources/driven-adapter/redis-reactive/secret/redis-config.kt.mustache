package {{package}}.config;

import co.com.bancolombia.secretsmanager.api.exceptions.SecretException;
import co.com.bancolombia.secretsmanager.api.GenericManagerAsync;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.redis.connection.ReactiveRedisConnectionFactory;
import org.springframework.data.redis.connection.RedisStandaloneConfiguration;
import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;

@Configuration
class RedisConfig {

    @Bean
    @Throws(JMSException::class)
    fun redisConfig(secret :@Value("${aws.secretName}") String, manager :GenericManagerAsync) :RedisStandaloneConfiguration
     {
        // Load secret here
        val configuration :RedisStandaloneConfiguration = RedisStandaloneConfiguration();
        // Update values here
        return configuration;
        throw IOException()
    }

    @Bean
    fun  redisConnectionFactory(val configuration :RedisStandaloneConfiguration) :ReactiveRedisConnectionFactory {
        return  LettuceConnectionFactory(configuration);
    }
}
