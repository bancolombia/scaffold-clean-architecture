package {{package}}.redis.config

import co.com.bancolombia.secretsmanager.api.GenericManagerAsync
import co.com.bancolombia.secretsmanager.api.exceptions.SecretException
import org.springframework.beans.factory.annotation.Value
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
import org.springframework.context.annotation.Primary
import org.springframework.data.redis.connection.ReactiveRedisConnectionFactory
import org.springframework.data.redis.connection.RedisStandaloneConfiguration
import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory


@Configuration
open class RedisConfig {
    @Bean
    @Throws(SecretException::class)
    open fun getRedisConfig(
        @Value("\${aws.secretName}") secret: String,
        manager: GenericManagerAsync
    ): RedisStandaloneConfiguration {
        // Load secret here
        // Update values here
        return RedisStandaloneConfiguration()
    }

    @Primary
    @Bean
    open fun getRedisConnectionFactory(configuration: RedisStandaloneConfiguration): ReactiveRedisConnectionFactory {
        return LettuceConnectionFactory(configuration)
    }
}
