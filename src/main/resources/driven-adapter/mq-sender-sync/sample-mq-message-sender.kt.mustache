package {{package}}.mq.sender

import co.com.bancolombia.commons.jms.mq.EnableMQMessageSender
import org.springframework.stereotype.Component
import javax.jms.JMSContext
import javax.jms.Message


@Component
@EnableMQMessageSender
//@EnableMQSelectorMessageListener // Enable it to retrieve a specific message by correlationId
class SampleMQMessageSender(
    private val sender: MQMessageSenderSync,
//    private val container: MQQueuesContainer,
//    private val listener : MQMessageSelectorListenerSync
)/* implements SomeGateway */
{

    fun send(message: String): String {
        return sender.send { context: JMSContext ->
            val textMessage: Message = context.createTextMessage(message)
            //textMessage.jmsReplyTo =
            //    container["any-custom-value"] // Inject the reply to queue from container
            textMessage
        }
    }

//    Enable it to retrieve a specific message by correlationId
//    fun getResult(correlationId: String?): String {
//        val message = listener.getMessage(correlationId)
//        return extractResponse(message)
//    }

//    private fun extractResponse(message: Message): String {
//        val textMessage = message as TextMessage
//        return textMessage.text
//    }
}
