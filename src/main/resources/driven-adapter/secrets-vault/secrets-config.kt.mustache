package {{package}}.config

import co.com.bancolombia.secretsmanager.api.GenericManager
import co.com.bancolombia.secretsmanager.api.exceptions.SecretException
import co.com.bancolombia.secretsmanager.vaultsync.connector.VaultSecretManagerConfigurator;
import co.com.bancolombia.secretsmanager.vault.config.VaultSecretsManagerProperties;
import org.springframework.beans.factory.annotation.Value
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration

@Configuration
open class SecretsConfig {

   @Bean
   open fun getSecretManager(@Value("\${vault.host}") host: String,
                            @Value("\${vault.port}") port: int): GenericManagerAsync {
          val configurator = VaultSecretManagerConfigurator.builder()
                  .withProperties(VaultSecretsManagerProperties.builder()
                          .host(host)
                          .port(port)
                          .ssl(false)
                          //.roleId("<my role id for auth with vault>")
                          //.secretId("my secret id  for auth with vault>")
                          .token("<my token>")  // or if you already have a token
                          .build()
                  )
                  .build();
          return configurator.getVaultClient();
   }
}

