package {{package}}.dynamodb.config

import org.springframework.beans.factory.annotation.Value
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
import org.springframework.context.annotation.Profile
import software.amazon.awssdk.auth.credentials.ProfileCredentialsProvider
import software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedAsyncClient
import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient

import java.net.URI

@Configuration
open class DynamoDBConfig {
    @Bean
    @Profile("local")
    open fun amazonDynamoDB(
        @Value("\${aws.dynamodb.endpoint}") endpoint: String?
    ): DynamoDbAsyncClient {
        return DynamoDbAsyncClient.builder()
                .credentialsProvider(ProfileCredentialsProvider.create("default"))
                .endpointOverride(URI.create(endpoint))
                .build();
    }

    @Bean
    @Profile("dev", "cer", "pdn")
     open fun amazonDynamoDB(): DynamoDbAsyncClient {
            return DynamoDbAsyncClient.builder().build()
        }

    @Bean
    fun getDynamoDbEnhancedAsyncClient(client: DynamoDbAsyncClient): DynamoDbEnhancedAsyncClient {
      return DynamoDbEnhancedAsyncClient.builder().dynamoDbClient(client).build()
        }
}
