package {{package}}.mongo

import {{package}}.mongo.helper.AdapterOperations
import org.reactivecommons.utils.ObjectMapper
import org.springframework.stereotype.Repository
import java.util.function.Function

/**
*  Could be use mapper.mapBuilder if your domain model implement builder pattern
*  super(repository, mapper, d -> mapper.mapBuilder(d,ObjectModel.ObjectModelBuilder.class).build());
*  Or using mapper.map with the class of the object model
*/
@Repository
open class MongoRepositoryAdapter(repository: MongoDBRepository, mapper: ObjectMapper) :
    AdapterOperations<Any /* change for domain model */, Any /* change for adapter model */, String, MongoDBRepository>(repository, mapper,
            Function { d: Any ->
            mapper.map(
                d,
                Any::class.java /* change for domain model */
            )
        }) // implements ModelRepository from domain
