package {{package}}.binstash.config;

import co.com.bancolombia.binstash.model.api.ObjectCache;
import org.springframework.context.annotation.Bean;

{{#include-local}}
import co.com.bancolombia.binstash.LocalCacheFactory;
{{/include-local}}

{{#include-centralized}}
import co.com.bancolombia.binstash.CentralizedCacheFactory;
{{/include-centralized}}

{{#include-hibrid}}
import co.com.bancolombia.binstash.HybridCacheFactory;
import co.com.bancolombia.binstash.model.SyncRule;
import java.util.Collections;
import java.util.List;
{{/include-hibrid}}

@Configuration
public class BinStashConfiguration {

{{#include-local}}
    @Bean
    public ObjectCache<Object/*Replace for domain model*/> objectCache(LocalCacheFactory<Object> localCacheFactory) {
        return localCacheFactory.newObjectCache();
        }
{{/include-local}}

{{#include-centralized }}
        @Bean
        public ObjectCache<Object/*Replace for domain model*/> objectCache(CentralizedCacheFactory<Object> centralizedCacheFactory) {
            return centralizedCacheFactory.newObjectCache();
        }
{{/include-centralized }}

{{#include-hybrid}}
        @Bean
        public List<SyncRule> cacheSyncRules() {
            SyncRule simpleSyncRule = (keyArg, syncType) -> true;
            return Collections.singletonList(simpleSyncRule);
        }

        @Bean
        public ObjectCache<Object/*Replace for domain model*/> objectCache(HybridCacheFactory<Object/*Replace for domain model*/> cacheFactory,
            List<SyncRule> cacheSyncRules) {
            return cacheFactory.newObjectCache(cacheSyncRules);
        }
{{/include-hybrid}}


}