<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test_Plan_${__P(P_Proyecto,Proyecto_Demo)}" enabled="true">
      <stringProp name="TestPlan.comments">Configurar librerias especificas y variables iniciales (formato clave valor)</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ConfiguraciÃ³n del CSV Data Set" enabled="true">
        <stringProp name="TestPlan.comments">Variabliza tus script y utliza tu Set Datos </stringProp>
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="filename">${__P(P_Data_Set,DT_Valorpordefecto.txt)}</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames"></stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GH_${__P(P_Escenario,Escenario_Demo)}" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(P_Hilos,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(P_Subida,300)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(P_Duracion,600)}</stringProp>
        <stringProp name="ThreadGroup.delay">${__P(P_Retardo,0)}</stringProp>
        <stringProp name="TestPlan.comments">Recuerda configurar el stage de Performance con los parametros entregados por el calculo de concurrencia que lo encuentras en el checklist </stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Tx_${__P(P_Nombre_Tx,Transaccion_1)} " enabled="true">
          <stringProp name="TestPlan.comments">Recuerda Nombra tu peticion sin caracteres especiales o espacios evitando que el stage el stage falle.</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="MQ Queue Manager" elementType="Argument">
                <stringProp name="Argument.name">MQ Queue Manager</stringProp>
                <stringProp name="Argument.value">${__P(MQmanager,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="QMGR Type" elementType="Argument">
                <stringProp name="Argument.name">QMGR Type</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Host" elementType="Argument">
                <stringProp name="Argument.name">Host</stringProp>
                <stringProp name="Argument.value">${__P(Host,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Port" elementType="Argument">
                <stringProp name="Argument.name">Port</stringProp>
                <stringProp name="Argument.value">${__P(Port,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Channel" elementType="Argument">
                <stringProp name="Argument.name">Channel</stringProp>
                <stringProp name="Argument.value">${__P(Chanel,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="User" elementType="Argument">
                <stringProp name="Argument.name">User</stringProp>
                <stringProp name="Argument.value">${__P(User,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Password" elementType="Argument">
                <stringProp name="Argument.name">Password</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CCDT Location" elementType="Argument">
                <stringProp name="Argument.name">CCDT Location</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MessageType(MQMT_DATAGRAM=8,MQMT_REPLY=2,MQMT_REPORT=4,MQMT_REQUEST=1)" elementType="Argument">
                <stringProp name="Argument.name">MessageType(MQMT_DATAGRAM=8,MQMT_REPLY=2,MQMT_REPORT=4,MQMT_REQUEST=1)</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Reply To QMGR" elementType="Argument">
                <stringProp name="Argument.name">Reply To QMGR</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SSL Cipher Suite" elementType="Argument">
                <stringProp name="Argument.name">SSL Cipher Suite</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MQRequestQueue" elementType="Argument">
                <stringProp name="Argument.name">MQRequestQueue</stringProp>
                <stringProp name="Argument.value">${__P(MQRequestQueue,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MQReplyToQ" elementType="Argument">
                <stringProp name="Argument.name">MQReplyToQ</stringProp>
                <stringProp name="Argument.value">${__P(MQReplyToQ,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MsgCCSID" elementType="Argument">
                <stringProp name="Argument.name">MsgCCSID</stringProp>
                <stringProp name="Argument.value">819</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sleepReads" elementType="Argument">
                <stringProp name="Argument.name">sleepReads</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RequestMessage" elementType="Argument">
                <stringProp name="Argument.name">RequestMessage</stringProp>
                <stringProp name="Argument.value">${__P(RequestMessage,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MessageFormat(MQSTR,MQDEAD,MQCICS,MQIMS,MQIMSVS,MQPCF,MQADMIN,MQCMD1,MQCMD2,MQHDIST,MQHEPCF,MQEVENT,MQHREF,MQHRF,MQHRF2,MQTRIG,MQHWIH,MQXMIT)" elementType="Argument">
                <stringProp name="Argument.name">MessageFormat(MQSTR,MQDEAD,MQCICS,MQIMS,MQIMSVS,MQPCF,MQADMIN,MQCMD1,MQCMD2,MQHDIST,MQHEPCF,MQEVENT,MQHREF,MQHRF,MQHRF2,MQTRIG,MQHWIH,MQXMIT)</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CorrelByCorrelID" elementType="Argument">
                <stringProp name="Argument.name">CorrelByCorrelID</stringProp>
                <stringProp name="Argument.value">True</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PutMSGId" elementType="Argument">
                <stringProp name="Argument.name">PutMSGId</stringProp>
                <stringProp name="Argument.value">${__P(PutMSGId,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PutCorrelId" elementType="Argument">
                <stringProp name="Argument.name">PutCorrelId</stringProp>
                <stringProp name="Argument.value">${__P(PutCorrelId,1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.bancolombia.integration.jmetermqsampler.MqPutterClient</stringProp>
        </JavaSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="AserciÃ³n de Respuesta Cuerpo" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1762742194">${__P(P_PatronAsercion,Todo Ok)}</stringProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">La asercion del patron de cuerpo de respuesta determina el cumplimiento del requisito funcional</stringProp>
            <stringProp name="Assertion.custom_message">Fallo asercion de cuerpo de respuesta: ${__P(P_PatronAsercion,Todo Ok)}</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>