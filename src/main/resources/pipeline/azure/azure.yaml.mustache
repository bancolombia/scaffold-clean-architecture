# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

name: $(Build.SourceBranchName).$(date:yyyyMMdd)$(rev:.r)

variables:
  - name: 'artifactory.Repository'
    value: 'build-{{projectName}}'
  - name: 'projectName'
    value: '{{projectName}}'
  - name: 'artifactName'
    value: '{{projectName}}'

resources:
  - repo: self

trigger:
  branches:
    include:
      - master
      - feature/*
      # TODO: Update the main {master/trunk} branch in the list to include it in the branch trigger

jobs:
  - job: BuildJob
    displayName: 'Build'
    pool:
      name: Build
      demands:
        - java
    steps:
      - task: CmdLine@2
        displayName: 'Gradle Wrapper Generation'
        inputs:
          script: |
            gradle wrapper
      - task: SonarQubePrepare@4
        displayName: 'Prepare analysis on SonarQube'
        inputs:
          SonarQube: SonarQube
          scannerMode: Other
          extraProperties: |
            sonar.projectKey=$(Build.Repository.Name)
            sonar.projectName=$(Build.Repository.Name)
            sonar.project.version=$(Build.BuildNumber)
            sonar.branch.name=$(Build.SourceBranchName)

      - task: Gradle@2
        displayName: 'Gradle build and test'
        inputs:
          workingDirectory: .
          gradleWrapperFile: gradlew
          tasks: 'clean build jacocoMergedReport'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          sonarQubeRunAnalysis: true
          sqGradlePluginVersionChoice: 'build'

      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage'
        inputs:
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/reports/jacocoMergedReport/jacocoMergedReport.xml'

      - task: Sonar-buildbreaker@8
        displayName: 'Break Build on Quality Gate Failure'
        inputs:
          SonarQube: SonarQube

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(System.DefaultWorkingDirectory)/applications/app-service/build/libs/'
          ArtifactName: '$(artifactName)'
          publishLocation: 'Container'
          condition: false
        # condition: and(succeeded(), eq(variables['Build.SourceBranch'],'refs/heads/master'))
        # TODO: Replace the line with 'condition: false' renaming the main branch in 'refs/heads/{master/trunk}' to work properly the source branch condition
