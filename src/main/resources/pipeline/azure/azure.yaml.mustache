name: $(Build.SourceBranchName).$(date:yyyyMMdd)$(rev:.r)

variables:
  - name: 'Artifactory.Repository'
    value: 'build-{{projectName}}'
  - name: 'Artifact.Name'
    value: '{{projectName}}'
  - name: 'projectName'
    value: '{{projectName}}'

resources:
  - repo: self
    clean: true

trigger:
  branches:
    include:
      - master
      - trunk
      - main
      - feature/*

stages:
  - stage: CI
    jobs:
      - job: build
        displayName: 'Build'
        pool:
          name: Build
        steps:
          - checkout: self
            fetchDepth: 0

          - task: JavaToolInstaller@1
            inputs:
              versionSpec: '21'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'

          - task: SonarQubePrepare@7
            displayName: 'Prepare analysis on SonarQube'
            inputs:
              SonarQube: SonarQube
              scannerMode: Other
              extraProperties: |
                {{#monoRepo}}
                sonar.projectKey=$(Build.Repository.Name)_$(projectName)
                sonar.projectName=$(Build.Repository.Name)_$(projectName)
                {{/monoRepo}}
                {{^monoRepo}}
                sonar.projectKey=$(Build.Repository.Name)
                sonar.projectName=$(Build.Repository.Name)
                {{/monoRepo}}
                sonar.projectVersion=$(Build.BuildNumber)

          - task: Gradle@4
            displayName: 'Build and Test'
            condition: succeeded()
            inputs:
              {{#monoRepo}}
              workingDirectory: $(projectName)
              gradleWrapperFile: $(projectName)/gradlew
              {{/monoRepo}}
              {{^monoRepo}}
              workingDirectory: .
              gradleWrapperFile: gradlew
              {{/monoRepo}}
              tasks: 'clean build jacocoMergedReport'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              sonarQubeRunAnalysis: true
              sqGradlePluginVersionChoice: 'build'
              javaHomeOption: 'JDKVersion'

          - task: PublishCodeCoverageResults@2
            displayName: 'Publish code coverage'
            inputs:
              {{#monoRepo}}
              summaryFileLocation: '$(System.DefaultWorkingDirectory)/$(projectName)/build/reports/jacocoMergedReport/jacocoMergedReport.xml'
              reportDirectory: '$(System.DefaultWorkingDirectory)/$(projectName)/build/reports/jacocoMergedReport/html'
              {{/monoRepo}}
              {{^monoRepo}}
              summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/reports/jacocoMergedReport/jacocoMergedReport.xml'
              reportDirectory: '$(System.DefaultWorkingDirectory)/build/reports/jacocoMergedReport/html'
              {{/monoRepo}}

          - task: publish-report-html@0
            displayName: 'Publish Mutation Report'
            inputs:
              reportName: 'Mutation Report'
              {{#monoRepo}}
              htmlPath: '$(System.DefaultWorkingDirectory)/$(projectName)/build/reports/pitest/index.html'
              {{/monoRepo}}
              {{^monoRepo}}
              htmlPath: '$(System.DefaultWorkingDirectory)/build/reports/pitest/index.html'
              {{/monoRepo}}

          - task: Sonar-buildbreaker@8
            displayName: 'Quality Gate'
            inputs:
              SonarQube: SonarQube

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            condition: in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/trunk', 'refs/heads/master')
            inputs:
              {{#monoRepo}}
              PathtoPublish: '$(System.DefaultWorkingDirectory)/$(projectName)/applications/app-service/build/libs/'
              {{/monoRepo}}
              {{^monoRepo}}
              PathtoPublish: '$(System.DefaultWorkingDirectory)/applications/app-service/build/libs/'
              {{/monoRepo}}
              ArtifactName: '$(Artifact.Name)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: test'
            inputs:
              {{#monoRepo}}
              PathtoPublish: $(projectName)/deployment/acceptanceTest
              {{/monoRepo}}
              {{^monoRepo}}
              PathtoPublish: deployment/acceptanceTest
              {{/monoRepo}}
              ArtifactName: test

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: Performance Test'
            inputs:
              {{#monoRepo}}
              PathtoPublish: $(projectName)/deployment/performance-test/Jmeter/{{projectName}}
              {{/monoRepo}}
              {{^monoRepo}}
              PathtoPublish: deployment/performance-test/Jmeter/{{projectName}}
              {{/monoRepo}}
              ArtifactName: PerformacerTest
